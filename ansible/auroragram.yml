---

- hosts: all

  pre_tasks:
    - include_vars: vars/main.yml

  roles:
    - common
    - common.zsh
    - ruby2.2
    - Stouts.mongodb

    - role: jdauphant.nginx
      sudo: True
      nginx_http_params:
        - sendfile on
        - access_log /var/log/nginx/access.log

      nginx_sites:

        auroragram.com:
          - listen 80
          - server_name {{ server_name }}
          - location ^~ /api/v1 {
              proxy_pass http://lb-aurora-api;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              }
          - location / {
              root /opt/auroragram/app;
              }

      nginx_configs:
        proxy:
          - proxy_set_header X-Real-IP  $remote_addr
          - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
        upstream:
          - upstream lb-aurora-api { ip_hash; server 127.0.0.1:3000; }

  tasks:
    - name: add INSTAGRAM_CLIENT_ID /etc/environment
      sudo: True
      lineinfile: dest=/etc/environment line="INSTAGRAM_CLIENT_ID={{instagram_client_id}}"

    - name: add INSTAGRAM_CLIENT_SECRET /etc/environment
      sudo: True
      lineinfile: dest=/etc/environment line="INSTAGRAM_CLIENT_SECRET={{instagram_client_secret}}"

    - name: add INSTAGRAM_ACCESS_TOKEN /etc/environment
      sudo: True
      lineinfile: dest=/etc/environment line="INSTAGRAM_ACCESS_TOKEN={{instagram_access_token}}"

    - name: clone Auroragram git repo
      git: repo=https://github.com:kaikousa/auroragram.git
          dest="{{ auroragram_dir }}"
          version=master
          force=yes
          accept_hostkey=True
      when: env_type != "development"

    - name: install bundled gems
      command: bundle
      args:
        chdir: "{{ auroragram_api_dir }}"

    - name: create log directory
      file: path=/var/log/auroragram state=directory

    - name: configure Supervisor
      template: src=templates/auroragram.conf.j2 dest=/etc/supervisor/conf.d/auroragram.conf
      when: env_type == "production"

    - name: reread and update Supervisor configurations
      shell: supervisorctl reread && supervisorctl update
      when: env_type == "production"

    - name: restart Auroragram with Supervisor
      command: supervisorctl restart auroragram
      when: env_type == "production"
